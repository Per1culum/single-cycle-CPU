`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/07/01 16:16:22
// Design Name: 
// Module Name: rom
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module rom(
    input [31:0] addr,
    output [31:0] data
    );
    reg[31:0] romdata;
    always @(*)
    case(addr[31:2])
    4'h0:romdata=32'b10001100000000110000000000100000; //lw $0,$3,32 *
    4'h1:romdata=32'b00110100000100000000000000000010; //ori $0,$16,2 *
    4'h2:romdata=32'b00000000000000111000100000100101; //or $0,$3,$17 *
    4'h3:romdata=32'b00110100000100110000000000000001; //ori $0,$19,1 *
    4'h4:romdata=32'b00110100000001000000000000000001; //ori $0,$4,1 *
    4'h5:romdata=32'b00010010001100110000000000001011; //beq $17,$19,11 *
    4'h6:romdata=32'b00000000000001000100000000100101; //or $0,$4,$8 *
    4'h7:romdata=32'b00100010011100110000000000000001; //addi $19,$19,1 *
    4'h8:romdata=32'b00110100000001000000000000000001; //ori $0,$4,1 *
    4'h9:romdata=32'b00010010001100110000000000000111; //beq $17,$19,7 *
    4'ha:romdata=32'b00000000000001000100100000100101; //or $0,$4,$9 *
    4'hb:romdata=32'b00000001000010010010000000100000; //add $8,$9,$4 *
    4'hc:romdata=32'b00000000000010010100000000100101; //or $0,$9,$8 *
    4'hd:romdata=32'b00000000000001000100100000100101; //or $0,$4,$9 *
    4'he:romdata=32'b00100010000100000000000000000001; //addi $16,$16,1 *
    4'hf:romdata=32'b00010110000100011111111111111011; //bne $16,$17,-5 *
    default:romdata=32'b10101100000001000000000000010000; //sw $0,$4,16
endcase
    assign data=romdata;
initial
    $monitor($time,,"rom:romdata=%h",romdata);
    
endmodule
